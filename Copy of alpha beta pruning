{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of alpha beta pruning ","provenance":[{"file_id":"1VJUHhF-IQdzB47ZsDfw12GsgTw6HC-vr","timestamp":1616073186378}],"authorship_tag":"ABX9TyMgL35YfEoXXu0Zd4K6YP6G"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"lOHYppO_vnF4","executionInfo":{"status":"ok","timestamp":1616097594690,"user_tz":-360,"elapsed":969,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["class node:\n","  count=0\n","  def __init__(self,v=None):\n","    self.value=v\n","    self.child=[]\n","  def addchild(self,a):\n","    self.child.append(a) "],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"dKqE2Oh28HZ5","executionInfo":{"status":"ok","timestamp":1616097595088,"user_tz":-360,"elapsed":1365,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["noOfterm=1*2\n","branch=3\n","min=1\n","max=20"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"VC_Cw7St6sK_","executionInfo":{"status":"ok","timestamp":1616097595088,"user_tz":-360,"elapsed":1364,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["import random\n","random.seed(300)\n","def randomValue():\n","  global max\n","  global min\n","  return random.randint(min,max)\n","\n","\n","def makegraph(noOfterm,branch,n):\n","  if n==None:\n","    n=node()\n","  if noOfterm!=1:\n","    for i in range(branch):\n","      n.addchild(node())\n","      makegraph(noOfterm-1,branch,n.child[i])\n","  else:\n","    for i in range(branch):\n","      n.addchild(node(randomValue()))\n","  return n\n","\n","a=makegraph(noOfterm,branch,None)\n","\n","\n","#print(a.child)\n","#print(a.child[0].child)\n","#print(a.child[1].child)\n","#print(a.child[2].child)"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"MjoqZ9WnyDEE","executionInfo":{"status":"ok","timestamp":1616097595089,"user_tz":-360,"elapsed":1364,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["def max(a,b):\n","  if a>b:\n","    return a\n","  return b\n","  \n","def min(a,b):\n","  if a<b:\n","    return a\n","  return b"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"n4nRjGC9I8qo","executionInfo":{"status":"ok","timestamp":1616097595089,"user_tz":-360,"elapsed":1363,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["def max(a,b):\n","  if a>b:\n","    return a\n","  return b\n","  \n","def min(a,b):\n","  if a<b:\n","    return a\n","  return b\n","\n","count=0\n","def minimax(node, depth, maximizing):\n","  global count\n","  if depth == 0:\n","    count+=1\n","    return node.value \n","  \n","  if maximizing:\n","    maxEval = -m.inf\n","    for child in node.child:\n","      eval = minimax(child, depth - 1, False)\n","      maxEval = max(maxEval, eval)\n","    return maxEval\n","  else:\n","    minEval = m.inf\n","    for child in node.child:\n","      eval = minimax(child, depth - 1, True)\n","      minEval = min(minEval, eval)\n","     \n","    return minEval"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"id":"idTfre9WZ4S5","executionInfo":{"status":"error","timestamp":1616097595506,"user_tz":-360,"elapsed":1771,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}},"outputId":"c117e29f-a9c3-44cd-83ee-9f07f4c8d102"},"source":["import math as m\n","\n","count=0\n","def minimaxAlphaBeta(node, depth,alpha, beta, maximizing):\n","  global count\n","  if depth == 0:\n","    count+=1\n","    return node.value \n","  \n","  if maximizing:\n","    maxEval = -m.inf\n","    for child in node.child:\n","      eval = minimaxAlphaBeta(child, depth - 1,alpha, beta, False)\n","      maxEval = max(maxEval, eval)\n","      alpha = max(alpha, eval)\n","      if beta <= alpha:\n","        break\n","    return maxEval\n","  else:\n","    minEval = m.inf\n","    for child in node.child:\n","      eval = minimaxAlphaBeta(child, depth - 1,alpha, beta, True)\n","      minEval = min(minEval, eval)\n","      beta = min(beta, eval)\n","      if beta <= alpha:\n","        break     \n","    return minEval\n","\n","\n","c=minimaxAlphaBeta(a, 2,-m.inf,m.inf, True)\n","print(c)\n","print(count)\n","\n"],"execution_count":6,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-c30c5a453ca3>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 30\u001b[0;31m \u001b[0mc\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mminimaxAlpaBeta\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0mm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     31\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcount\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'minimaxAlpaBeta' is not defined"]}]},{"cell_type":"code","metadata":{"id":"NwIheJqRq2UM","executionInfo":{"status":"aborted","timestamp":1616097595505,"user_tz":-360,"elapsed":1767,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["noOfterm=1\n","branch=3\n","min=1\n","max=20\n","a=makegraph(noOfterm,branch,None)\n","minimax(a, 2, True)\n","\n","print(count)\n","\n","\n","c=minimaxAlpaBeta(a, 2,-m.inf,m.inf, True)\n","print(c)\n","print(count)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RHnmTSYvw231","executionInfo":{"status":"aborted","timestamp":1616097595506,"user_tz":-360,"elapsed":1767,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["#test case from question\n","a=node()\n","a.child=[node(),node(),node()]\n","a.child[0].child=[node(),node(),node()]\n","a.child[0].child[0].value=8\n","a.child[0].child[1].value=12\n","a.child[0].child[2].value=3\n","a.child[1].child=[node(),node(),node()]\n","a.child[1].child[0].value=2\n","a.child[1].child[1].value=4\n","a.child[1].child[2].value=6\n","a.child[2].child=[node(),node(),node()]\n","a.child[2].child[0].value=14\n","a.child[2].child[1].value=5\n","a.child[2].child[2].value=2\n","#print(a.child[0].child[0].value)\n","#print(a.child[1].child)\n","#print(a.child[2].child)\n","minimax(a, 2, True)\n","print(count)\n"],"execution_count":null,"outputs":[]}]}
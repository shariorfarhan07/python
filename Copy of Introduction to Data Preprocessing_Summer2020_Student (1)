{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.7"},"colab":{"name":"Copy of Introduction to Data Preprocessing_Summer2020_Student","provenance":[{"file_id":"1_794R2HWZJYT06Q2iXBouXsrzXX-bQ_P","timestamp":1617797349629},{"file_id":"1Usm5b-bmPvskn_OxdQj_Dn0Pl2Xj2HYZ","timestamp":1598122941811}],"collapsed_sections":[]}},"cells":[{"cell_type":"markdown","metadata":{"id":"lzS89dStTfrQ"},"source":["## CSE 422 Introduction to Data Preprocessing\n","---\n","\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"cAhCkRL_SscW"},"source":["### What are the advantages of preprocessing the data before applying on machine learning algorithm?\n","\n","\"The biggest advantage of pre-processing in ML is to improve **generalizablity** of your model. Data for any ML application is collected through some ‘sensors’. These sensors can be physical devices, instruments, software programs such as web crawlers, manual surveys, etc. Due to hardware malfunctions, software glitches, instrument failures, amd human errors, noise and erroneous information may creep in that can severely affect the performance of your model. Apart from **noise**, there are several **redundant information** that needs to be removed. For e.g. while predicting whether it rains tomorrow or not, age of the person is irrelevant. In terms of text processing, there are several stop words that may be redundant for the analysis. Lastly, there may be several **outliers** present in your data, due to the way data is collected that may need to be removed to improve the performance of the classifiers.\" \n","                                    \n","                                            -Shehroz Khan, ML Researcher, Postdoc @U of Toronto\n"]},{"cell_type":"markdown","metadata":{"id":"0YYIQ5CNcZx-"},"source":["Some Data Preprocessing Techniques:\n","\n","* Deleting duplicate and null values\n","* Imputation for missing values\n","* Handling Categorical Features\n","* Feature Normalization/Scaling\n","* Feature Engineering\n","* Feature Selection"]},{"cell_type":"code","metadata":{"id":"gZPvqZUPTfrH","executionInfo":{"status":"ok","timestamp":1617797418193,"user_tz":-360,"elapsed":1361,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["#importing necessary libraries\n","import pandas as pd\n","import numpy as np\n"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0EvGojt9m-Yo"},"source":["#Removing Null values / Handling Missing data\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"40I_BWUeTfrS","colab":{"base_uri":"https://localhost:8080/","height":438},"executionInfo":{"status":"ok","timestamp":1617797419976,"user_tz":-360,"elapsed":3139,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}},"outputId":"e7f3dad2-9c87-4aec-b3af-6088911d8825"},"source":["volunteer = pd.read_csv('/content/sample_data/volunteer_opportunities.csv')\n","volunteer.head(3)"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>opportunity_id</th>\n","      <th>content_id</th>\n","      <th>vol_requests</th>\n","      <th>event_time</th>\n","      <th>title</th>\n","      <th>hits</th>\n","      <th>summary</th>\n","      <th>is_priority</th>\n","      <th>category_id</th>\n","      <th>category_desc</th>\n","      <th>amsl</th>\n","      <th>amsl_unit</th>\n","      <th>org_title</th>\n","      <th>org_content_id</th>\n","      <th>addresses_count</th>\n","      <th>locality</th>\n","      <th>region</th>\n","      <th>postalcode</th>\n","      <th>primary_loc</th>\n","      <th>display_url</th>\n","      <th>recurrence_type</th>\n","      <th>hours</th>\n","      <th>created_date</th>\n","      <th>last_modified_date</th>\n","      <th>start_date_date</th>\n","      <th>end_date_date</th>\n","      <th>status</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","      <th>Community Board</th>\n","      <th>Community Council</th>\n","      <th>Census Tract</th>\n","      <th>BIN</th>\n","      <th>BBL</th>\n","      <th>NTA</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4996</td>\n","      <td>37004</td>\n","      <td>50</td>\n","      <td>0</td>\n","      <td>Volunteers Needed For Rise Up &amp; Stay Put! Home...</td>\n","      <td>737</td>\n","      <td>Building on successful events last summer and ...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Center For NYC Neighborhoods</td>\n","      <td>4426</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NY</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>/opportunities/4996</td>\n","      <td>onetime</td>\n","      <td>0</td>\n","      <td>January 13 2011</td>\n","      <td>June 23 2011</td>\n","      <td>July 30 2011</td>\n","      <td>July 30 2011</td>\n","      <td>approved</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5008</td>\n","      <td>37036</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>Web designer</td>\n","      <td>22</td>\n","      <td>Build a website for an Afghan business</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>Strengthening Communities</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Bpeace</td>\n","      <td>37026</td>\n","      <td>1</td>\n","      <td>5 22nd St\\nNew York, NY 10010\\n(40.74053152272...</td>\n","      <td>NY</td>\n","      <td>10010.0</td>\n","      <td>NaN</td>\n","      <td>/opportunities/5008</td>\n","      <td>onetime</td>\n","      <td>0</td>\n","      <td>January 14 2011</td>\n","      <td>January 25 2011</td>\n","      <td>February 01 2011</td>\n","      <td>February 01 2011</td>\n","      <td>approved</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5016</td>\n","      <td>37143</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>Urban Adventures - Ice Skating at Lasker Rink</td>\n","      <td>62</td>\n","      <td>Please join us and the students from Mott Hall...</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>Strengthening Communities</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Street Project</td>\n","      <td>3001</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NY</td>\n","      <td>10026.0</td>\n","      <td>NaN</td>\n","      <td>/opportunities/5016</td>\n","      <td>onetime</td>\n","      <td>0</td>\n","      <td>January 19 2011</td>\n","      <td>January 21 2011</td>\n","      <td>January 29 2011</td>\n","      <td>January 29 2011</td>\n","      <td>approved</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   opportunity_id  content_id  vol_requests  ...  BIN BBL  NTA\n","0            4996       37004            50  ...  NaN NaN  NaN\n","1            5008       37036             2  ...  NaN NaN  NaN\n","2            5016       37143            20  ...  NaN NaN  NaN\n","\n","[3 rows x 35 columns]"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"utvR4slHUUoH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617797419976,"user_tz":-360,"elapsed":3136,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}},"outputId":"975e9b72-3bda-474c-b3e8-058559b57367"},"source":["volunteer.shape"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(665, 35)"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"RFHvAKsPaJhH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617797419976,"user_tz":-360,"elapsed":3134,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}},"outputId":"f40a9d04-a294-4bf7-f345-cb2fb6a7c60f"},"source":["volunteer.isnull().sum()"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["opportunity_id          0\n","content_id              0\n","vol_requests            0\n","event_time              0\n","title                   0\n","hits                    0\n","summary                 0\n","is_priority           603\n","category_id            48\n","category_desc          48\n","amsl                  665\n","amsl_unit             665\n","org_title               0\n","org_content_id          0\n","addresses_count         0\n","locality               70\n","region                  0\n","postalcode              6\n","primary_loc           665\n","display_url             0\n","recurrence_type         0\n","hours                   0\n","created_date            0\n","last_modified_date      0\n","start_date_date         0\n","end_date_date           0\n","status                  0\n","Latitude              665\n","Longitude             665\n","Community Board       665\n","Community Council     665\n","Census Tract          665\n","BIN                   665\n","BBL                   665\n","NTA                   665\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"1mD-JfDWa_Fu"},"source":["dropping columns"]},{"cell_type":"code","metadata":{"id":"ktNVIfmZMPuT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617797419977,"user_tz":-360,"elapsed":3132,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}},"outputId":"77f6b25b-b994-4387-d2af-6fb9f2ba9495"},"source":["volunteer = volunteer.drop(['BIN', 'BBL', 'NTA'], axis = 1)\n","volunteer.shape"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(665, 32)"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"QOY4Abiua72Z"},"source":["dropping rows"]},{"cell_type":"code","metadata":{"id":"66t7QR7sTfrX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617797419977,"user_tz":-360,"elapsed":3130,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}},"outputId":"4ca9f742-6c97-460f-e061-637519ad5bf3"},"source":["# Check how many values are missing in the category_desc column\n","print(\"Number of rows with null values in category_desc column: \", volunteer['category_desc'].isnull().sum())\n","\n","# Subset the volunteer dataset\n","#print(volunteer_subset )\n","volunteer_subset = volunteer[volunteer['category_desc'].notnull()]\n","print(volunteer_subset )\n","# Print out the shape of the subset\n","print(\"Shape after removing null values: \", volunteer_subset.shape)"],"execution_count":8,"outputs":[{"output_type":"stream","text":["Number of rows with null values in category_desc column:  48\n","     opportunity_id  content_id  ...  Community Council   Census Tract\n","1              5008       37036  ...                 NaN           NaN\n","2              5016       37143  ...                 NaN           NaN\n","3              5022       37237  ...                 NaN           NaN\n","4              5055       37425  ...                 NaN           NaN\n","5              5056       37426  ...                 NaN           NaN\n","..              ...         ...  ...                 ...           ...\n","660            5640       50193  ...                 NaN           NaN\n","661            5218       38711  ...                 NaN           NaN\n","662            5541       47820  ...                 NaN           NaN\n","663            5398       40722  ...                 NaN           NaN\n","664            5507       44303  ...                 NaN           NaN\n","\n","[617 rows x 32 columns]\n","Shape after removing null values:  (617, 32)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-S7J7lLOrJdJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617797419977,"user_tz":-360,"elapsed":3128,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}},"outputId":"28e3bd33-43e7-4bca-dbfa-3e203906e9fc"},"source":["print(\"Shape of dataframe before dropping:\", volunteer.shape)\n","volunteer = volunteer.dropna(axis = 0, subset = ['category_desc'])\n","print(\"Shape after dropping:\", volunteer.shape)"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Shape of dataframe before dropping: (665, 32)\n","Shape after dropping: (617, 32)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"_W4nE4hGip78"},"source":["### Imputing missing Values"]},{"cell_type":"code","metadata":{"id":"IDnuRns2rWJ0","colab":{"base_uri":"https://localhost:8080/","height":398},"executionInfo":{"status":"error","timestamp":1617797419989,"user_tz":-360,"elapsed":3138,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}},"outputId":"ab42ffa7-5d1e-46c6-9425-1c142f3a9eab"},"source":["sales = pd.read_csv('/content/sample_data/sales.csv', index_col = ['month'])\n","sales"],"execution_count":10,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-54e3aa51665b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msales\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/sample_data/sales.csv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex_col\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'month'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0msales\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, dialect, error_bad_lines, warn_bad_lines, delim_whitespace, low_memory, memory_map, float_precision)\u001b[0m\n\u001b[1;32m    686\u001b[0m     )\n\u001b[1;32m    687\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 688\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    689\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    690\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    452\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    453\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 454\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfp_or_buf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    455\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    456\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m    946\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    947\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 948\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    949\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    950\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, engine)\u001b[0m\n\u001b[1;32m   1178\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mengine\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"c\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1179\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mengine\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"c\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1180\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mCParserWrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1181\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1182\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mengine\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"python\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, src, **kwds)\u001b[0m\n\u001b[1;32m   2008\u001b[0m         \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"usecols\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0musecols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2009\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2010\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mparsers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTextReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2011\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munnamed_cols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munnamed_cols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2012\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader.__cinit__\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._setup_parser_source\u001b[0;34m()\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/sample_data/sales.csv'"]}]},{"cell_type":"code","metadata":{"id":"-gre3DF2BOBn","executionInfo":{"status":"aborted","timestamp":1617797419977,"user_tz":-360,"elapsed":3124,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["sales.fillna(50)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WwA7m0GYBa0V","executionInfo":{"status":"aborted","timestamp":1617797419978,"user_tz":-360,"elapsed":3123,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["sales = pd.read_csv('/content/sample_data/sales.csv', index_col = ['month'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"18XKg-3tDV3S","executionInfo":{"status":"aborted","timestamp":1617797419978,"user_tz":-360,"elapsed":3120,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["sales[['salt']]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ugpsjd-SyEhC","executionInfo":{"status":"aborted","timestamp":1617797419978,"user_tz":-360,"elapsed":3117,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["from sklearn.impute import SimpleImputer\n","\n","impute = SimpleImputer(missing_values=np.nan, strategy='mean')\n","\n","impute.fit(sales[['salt']])\n","\n","sales['salt'] = impute.transform(sales[['salt']])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7ZTXR0hT15ZH","executionInfo":{"status":"aborted","timestamp":1617797419978,"user_tz":-360,"elapsed":3115,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["sales"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IHnRFvFPTfr0"},"source":["## Standardizing Data"]},{"cell_type":"markdown","metadata":{"id":"kgHgelb9RUXB"},"source":["## Feature Scaling"]},{"cell_type":"markdown","metadata":{"id":"1lcM-IuqD_XW"},"source":["## Why do we need to scale our data?\n","* If a feature’s variance is orders of magnitude more than the variance of other features, that particular feature might dominate other features in the dataset and make the estimator unable to learn from other features correctly, i.e. our learner might give more importance to features with high variance, which is not something we want happening in our model.\n","\n","The following are a few different types of Scalers:\n"]},{"cell_type":"markdown","metadata":{"id":"Sq14OVytLYu4"},"source":["**MinMax Scaler:** \n","\n","Scales values to a range between 0 and 1 if no negative values, and -1 to 1 if there are negative values present.\n","\n","$$\\frac{X - X_{min}}{X_{max} - X_{min}}$$\n","\n","where, \n","\n"," $$X\\space is\\space a\\space feature\\space value.$$ \n"," $$X_{min} \\space and \\space X_{max} \\space are \\space corresponding \\space feature's \\space min \\space and \\space max \\space values. $$\n","\n","\n","**Standard Scaler:**\n","\n","$$\\frac{X - mean}{\\sigma}$$\n","where,\n","$$\\sigma = standard \\space deviation $$ \n","\n","**Robust Scaler:**\n","\n","Uses statistics that are robust to outliers\n","\n","$$\\frac{X - median}{IQR}$$\n","\n","where, \n","\n","$$ IQR = Inter\\space Quartile\\space Range = Q_3 - Q_1 $$\n"]},{"cell_type":"markdown","metadata":{"id":"KQob80w1EzLr"},"source":["Sklearn library provides functions for different scalers by which we can easily scale our data."]},{"cell_type":"code","metadata":{"id":"KtHgJCq694fQ","executionInfo":{"status":"aborted","timestamp":1617797419979,"user_tz":-360,"elapsed":3114,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["from sklearn.datasets import load_breast_cancer\n","from sklearn.model_selection import train_test_split\n","\n","cancer = load_breast_cancer()\n","\n","X_train, X_test, y_train, y_test = train_test_split(cancer.data, cancer.target,\n","                                                    random_state=1)\n","print(X_train.shape)\n","print(X_test.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nmRRRpz9973B","executionInfo":{"status":"aborted","timestamp":1617797419979,"user_tz":-360,"elapsed":3111,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["from sklearn.preprocessing import MinMaxScaler\n","\n","scaler = MinMaxScaler()\n","\n","scaler.fit(X_train)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"koZK3tgWFhGp","executionInfo":{"status":"aborted","timestamp":1617797419979,"user_tz":-360,"elapsed":3109,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["# transform data\n","X_train_scaled = scaler.transform(X_train)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"H-kDLXZu-YBX"},"source":["We can see that after Min-Max Scaling all the values are in the range [0,1]"]},{"cell_type":"code","metadata":{"id":"rc54JPhqF0dt","executionInfo":{"status":"aborted","timestamp":1617797419980,"user_tz":-360,"elapsed":3108,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["print(\"per-feature minimum before scaling:\\n {}\".format(X_train.min(axis=0)))\n","print(\"per-feature maximum before scaling:\\n {}\".format(X_train.max(axis=0)))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cWXrV9lp-Bkp","executionInfo":{"status":"aborted","timestamp":1617797419980,"user_tz":-360,"elapsed":3106,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["print(\"per-feature minimum after scaling:\\n {}\".format(\n","    X_train_scaled.min(axis=0)))\n","print(\"per-feature maximum after scaling:\\n {}\".format(\n","    X_train_scaled.max(axis=0)))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"c_7BmLE--E3w","executionInfo":{"status":"aborted","timestamp":1617797419980,"user_tz":-360,"elapsed":3103,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["# transform test data\n","X_test_scaled = scaler.transform(X_test)\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cvIJO2eeNp2D"},"source":["## Effect of using MinMax Scaler:"]},{"cell_type":"markdown","metadata":{"id":"cWcMT_EGGcwN"},"source":["### Accuracy without scaling"]},{"cell_type":"code","metadata":{"id":"WSA3eWpW9dlQ","executionInfo":{"status":"aborted","timestamp":1617797419980,"user_tz":-360,"elapsed":3101,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["from sklearn.neighbors import KNeighborsClassifier\n","X_train, X_test, y_train, y_test = train_test_split(cancer.data, cancer.target,\n","                                                    random_state=0)\n","knn=KNeighborsClassifier()\n","\n","knn.fit(X_train, y_train)\n","\n","print(\"Test set accuracy: {:.2f}\".format(knn.score(X_test, y_test)))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"a3T7WMdS_X57"},"source":["### We can see that accuracy improves if we train on scaled data."]},{"cell_type":"code","metadata":{"id":"_4zKCdAA9dhi","executionInfo":{"status":"aborted","timestamp":1617797419981,"user_tz":-360,"elapsed":3100,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["# preprocessing using 0-1 scaling\n","scaler = MinMaxScaler()\n","scaler.fit(X_train)\n","\n","X_train_scaled = scaler.transform(X_train)\n","\n","X_test_scaled = scaler.transform(X_test)\n","\n","#train\n","knn.fit(X_train_scaled, y_train)\n","\n","# scoring on the scaled test set\n","print(\"Scaled test set accuracy: {:.2f}\".format(\n","    knn.score(X_test_scaled, y_test)))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"THUjYQzN_S0Z"},"source":["### Effect using Standard Scaler: \n","We can see that accuracy has improved compared to the non-scaled version, but we can infer that for this problem, Standard Scaler performs worse than MinMaxScaler."]},{"cell_type":"code","metadata":{"id":"jjzSafqk-Ina","executionInfo":{"status":"aborted","timestamp":1617797419981,"user_tz":-360,"elapsed":3098,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","\n","#instead of using .fit() and .transform() separately, we can use .fit_transform()\n","X_scaled_d = scaler.fit_transform(X_train)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BMpuacp49del","executionInfo":{"status":"aborted","timestamp":1617797419981,"user_tz":-360,"elapsed":3097,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["# preprocessing using zero mean and unit variance scaling\n","from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","scaler.fit(X_train)\n","\n","X_train_scaled = scaler.transform(X_train)\n","X_test_scaled = scaler.transform(X_test)\n","\n","# learning an SVM on the scaled training data\n","knn.fit(X_train_scaled, y_train)\n","\n","# scoring on the scaled test set\n","print(\"KNN test accuracy: {:.2f}\".format(knn.score(X_test_scaled, y_test)))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"My5bgznkTfsV"},"source":["## Feature Engineering"]},{"cell_type":"markdown","metadata":{"id":"9tz87oUDTfsW"},"source":["### Encoding categorical variables - binary\n"]},{"cell_type":"code","metadata":{"id":"Ngz-ICV2TfsW","executionInfo":{"status":"aborted","timestamp":1617797419982,"user_tz":-360,"elapsed":3094,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["hiking = pd.read_json('/content/sample_data/hiking.json')\n","hiking.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"M7b_JOhNWgXy","executionInfo":{"status":"aborted","timestamp":1617797419982,"user_tz":-360,"elapsed":3092,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["hiking.info()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qFYXdTSpshQX","executionInfo":{"status":"aborted","timestamp":1617797419982,"user_tz":-360,"elapsed":3089,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["hiking['Accessible'].unique()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1ip2DAQ5Tfsa","executionInfo":{"status":"aborted","timestamp":1617797419983,"user_tz":-360,"elapsed":3088,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["from sklearn.preprocessing import LabelEncoder\n","\n","# Set up the LabelEncoder object\n","enc = LabelEncoder()\n","\n","# Apply the encoding to the \"Accessible\" column\n","hiking['Accessible_enc'] = enc.fit_transform(hiking['Accessible'])\n","\n","# Compare the two columns\n","print(hiking[['Accessible', 'Accessible_enc']].head())"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"__K7zf64Dc8s"},"source":["We may also encode/map a certain class to a specific code (e.g 0/1/2) by using the `map()` function. "]},{"cell_type":"code","metadata":{"id":"nUC3A0b3D-BC","executionInfo":{"status":"aborted","timestamp":1617797419983,"user_tz":-360,"elapsed":3086,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["hiking['Accessible'] = hiking['Accessible'].map({'good':2,'bad':0,'average':1}) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8zfdrX8kujYK","executionInfo":{"status":"aborted","timestamp":1617797419983,"user_tz":-360,"elapsed":3082,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["volunteer = pd.read_csv('/content/sample_data/volunteer_opportunities.csv')\n","volunteer.head(3)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"SNCEXjltTfsf"},"source":["### Encoding categorical variables - one-hot encoding"]},{"cell_type":"code","metadata":{"id":"adGWJrRWu3c_","executionInfo":{"status":"aborted","timestamp":1617797419984,"user_tz":-360,"elapsed":3079,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["volunteer.info()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NyPtPelkuzdb","executionInfo":{"status":"aborted","timestamp":1617797419984,"user_tz":-360,"elapsed":3074,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["volunteer['category_desc'].unique()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9MfAn127Tfsg","executionInfo":{"status":"aborted","timestamp":1617797419984,"user_tz":-360,"elapsed":3070,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["# Transform the category_desc column\n","category_enc = pd.get_dummies(volunteer['category_desc'])\n","\n","# Take a look at the encoded columns\n","category_enc.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"smExDPZxyNKx","executionInfo":{"status":"aborted","timestamp":1617797419985,"user_tz":-360,"elapsed":3066,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["volunteer['category_desc'].head()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4UkVypd11JW-"},"source":["##Feature Engineering"]},{"cell_type":"markdown","metadata":{"id":"4O_bdBq3qaAB"},"source":["### Engineering numerical features - by taking an average\n","\n","Suppose we have multiple features each of which contains time taken for each runner to complete a lap. We can reduce the dimensionality of our dataset (reduce the number of features) by averaging(mean) the time taken of each run."]},{"cell_type":"code","metadata":{"id":"MzqqMxxTqeh1","executionInfo":{"status":"aborted","timestamp":1617797419985,"user_tz":-360,"elapsed":3062,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["running_times_5k = pd.DataFrame([['Sue', 20.1, 18.5, 19.6, 20.3, 18.3], ['Mark', 16.5, 17.1, 16.9, 17.6, 17.3], ['Sean', 23.5, 25.1, 25.2, 24.6, 23.9], ['Erin', 21.7, 21.1, 20.9, 22.1, 22.2], ['Jenny', 25.8, 27.1, 26.1, 26.7, 26.9], ['Russell', 30.9, 29.6, 31.4, 30.4, 29.9]])\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"A_7HWiUcqvz9","executionInfo":{"status":"aborted","timestamp":1617797419986,"user_tz":-360,"elapsed":3059,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["running_times_5k.columns =  ['name', 'run1', 'run2', 'run3', 'run4', 'run5']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_nwf3WPJzjhX","executionInfo":{"status":"aborted","timestamp":1617797419986,"user_tz":-360,"elapsed":3055,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["running_times_5k"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1eBFPPW4qkue","executionInfo":{"status":"aborted","timestamp":1617797419986,"user_tz":-360,"elapsed":3052,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["# Create a list of the columns to average\n","run_columns = [\"run1\", \"run2\", \"run3\", \"run4\", \"run5\"]\n","\n","# Use apply to create a mean column\n","running_times_5k[\"mean\"] = running_times_5k.apply(lambda row: row[run_columns].mean(), axis=1)\n","\n","# Take a look at the results\n","print(running_times_5k)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GndB_JOYTfss"},"source":["### Engineering numerical features - datetime\n","\n","We are extracting the start_date_month from the `date_time` format which we can use later to input into our learner/model/algorithm. This feature will be much more meaningful for the learner compared to the `date_time` format. "]},{"cell_type":"code","metadata":{"id":"gkQQ7qtl3kiP","executionInfo":{"status":"aborted","timestamp":1617797419986,"user_tz":-360,"elapsed":3049,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["volunteer[\"start_date_date\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"h_qSQbTLTfst","executionInfo":{"status":"aborted","timestamp":1617797419987,"user_tz":-360,"elapsed":3048,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["# First, convert string column to date column\n","volunteer[\"start_date_converted\"] = pd.to_datetime(volunteer[\"start_date_date\"])\n","\n","# Extract just the month from the converted column\n","volunteer[\"start_date_month\"] = volunteer[\"start_date_converted\"].apply(lambda row: row.month)\n","\n","# Take a look at the converted and new month columns\n","volunteer[['start_date_converted', 'start_date_month']].head()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hjQMrkorTfs9"},"source":["## Feature Selection"]},{"cell_type":"markdown","metadata":{"id":"762jMLqRTfs_"},"source":["### Selecting relevant features\n","\n","Sometimes certain circumstances arise that we have a lot of features in our dataset, but from our prior/domain knowledge we know that certain features might not be too important. In such cases we may want to drop those irrelevant features.\n","\n"]},{"cell_type":"code","metadata":{"id":"wG2LXzDXTftA","executionInfo":{"status":"aborted","timestamp":1617797419987,"user_tz":-360,"elapsed":3045,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["# Create a list of redundant column names to drop\n","to_drop = [\"category_desc\", \"created_date\", \"locality\", \"region\", \"vol_requests\"]\n","\n","# Drop those columns from the dataset\n","volunteer_subset = volunteer.drop(to_drop, axis=1)\n","\n","# Print out the head of the new dataset\n","volunteer_subset.head()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZjiT5OVhTftE"},"source":["### Checking for correlated features\n","\n","We may use the following heatmap to find out the correlation between each of the features in a dataset. If a certain feature is highly correlated with more than one feature, we may choose to drop that feature (in this case it is *flavanoids*) because it will affect our model in a similar way as the other two features (and thus will prove to redundant). Correlation between two features may be found using the color gradient shown on the right."]},{"cell_type":"code","metadata":{"id":"cwJFgFcKM9hM","executionInfo":{"status":"aborted","timestamp":1617797419987,"user_tz":-360,"elapsed":3042,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["from sklearn.datasets import load_wine\n","\n","wine = load_wine()\n","wine_df = pd.DataFrame( wine['data'], columns=wine['feature_names'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jICUTyA3Od1P","executionInfo":{"status":"aborted","timestamp":1617797419988,"user_tz":-360,"elapsed":3041,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["wine_df.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zbAXIHtA5V_C","executionInfo":{"status":"aborted","timestamp":1617797419988,"user_tz":-360,"elapsed":3038,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["wine_corr = wine_df.corr()\n","wine_corr"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7xQH6KiQTftH","executionInfo":{"status":"aborted","timestamp":1617797419988,"user_tz":-360,"elapsed":3035,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["import seaborn as sns\n","\n","sns.heatmap(wine_corr, cmap = 'YlGnBu')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"daUq6EAegBX2","executionInfo":{"status":"aborted","timestamp":1617797419988,"user_tz":-360,"elapsed":3033,"user":{"displayName":"Md Sharior Hossain Farhan","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiiGdAQFghBokjILqPjNBrzTYH2apA7Q2VsrXhq=s64","userId":"12833581032909198047"}}},"source":["# Take a minute to find the column where the correlation value is greater than 0.75 at least twice\n","to_drop = 'flavanoids'\n","\n","# Drop that column from the DataFrame\n","wine_df = wine_df.drop(to_drop, axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JuhnDE8qKNfG"},"source":["## **Summary:**\n","\n","Basic Pipeline for solving a ML project:\n","\n","1. Read in Dataset\n","\n","2. Get to know your dataset using data vizualisation and other techniques\n","\n","3. Preprocess your dataset:\n","\n","  * remove/impute null values\n","  * remove outliers\n","  * feature scaling\n","  * feature engineering\n","  * feature selection\n","\n","4. train/test split\n","5. choose and build (number of) machine learning algorithm\n","5. train model on training data\n","6. make prediction on test data\n","7. evaluate performance on test data\n","8. visualization of your results\n","\n"]},{"cell_type":"markdown","metadata":{"id":"_6GTCKdCc6H7"},"source":["---\n","."]},{"cell_type":"markdown","metadata":{"id":"tckKAeXvTTNV"},"source":["."]},{"cell_type":"markdown","metadata":{"id":"hmoIM5twTVbz"},"source":["**Reference**\n","\n","\n","* Müller Andreas Christian, and Sarah Guido. Introduction to Machine Learning with Python a Guide for Data Scientists. OReilly, 2018.\n","\n","* DataCamp Python Course"]}]}